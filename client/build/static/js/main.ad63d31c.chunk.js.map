{"version":3,"sources":["Components/TeamBar/TeamItem.js","Components/TeamBar/TeamBar.js","Components/Graphs/Graph.js","Components/PlayerMap/autocomplete.js","Components/PlayerMap/index.js","Components/PlayerMap/activePlayer.js","Components/PlayerMap/hoverPlayer.js","Utils/API.js","Utils/D3.js","Utils/GRAPHS.js","Utils/Autocomplete.js","Utils/CONNECTIONS.js","App.js","registerServiceWorker.js","index.js"],"names":["TeamItem","props","className","active","onClick","teamFilter","tricode","data-tricode","src","logo","TeamBar","children","Graph","graphName","for","event","toggleGraphType","type","name","value","renderInputComponent","inputProps","classes","inputRef","ref","other","fullWidth","InputProps","node","renderSuggestion","suggestion","query","isHighlighted","matches","match","parts","parse","selected","component","map","part","index","highlight","key","String","style","fontWeight","text","getSuggestionValue","withStyles","theme","root","height","flexGrow","position","top","width","container","suggestionsContainerOpen","zIndex","marginTop","spacing","unit","left","right","display","suggestionsList","margin","padding","listStyleType","divider","autosuggestProps","suggestions","onSuggestionsFetchRequested","handleSuggestionsFetchRequested","onSuggestionsClearRequested","handleSuggestionsClearRequested","onSuggestionSelected","handleSelectionSelected","placeholder","onChange","handleChange","renderSuggestionsContainer","options","containerProps","square","PlayerMap","nextProps","nextState","this","hoverPlayer","nodes","pack","size","hierarchy","playerNodes","sum","d","r","descendants","shift","vertical","horizontal","threshold","onMouseDown","reset","player","id","data","_id","depth","x","y","fill","xlinkHref","toUpperCase","transform","firstLevelConnections","stroke","onMouseEnter","playerHover","Component","ActivePlayer","depthNumber","min","handleNumberChange","HoverPlayer","hover","axios","get","bookData","graphObj","dataSet","svg","select","target","attr","selectAll","remove","total","yValue","sort","a","b","val","startAngle","slice","colorScale","scaleLinear","domain","extent","range","console","log","div","append","arcs","enter","merge","on","transition","duration","html","img","bigHead","xValue","pageX","pageY","i","outerDiameter","a1","a2","degtorad","Math","PI","cr","cx1","cos","cy1","sin","cx2","cy2","largeFlag","getSectorPath","exit","max","length","xScale","scaleBand","s","xAxisCall","axisLeft","yScale","bars","call","axisBottom","t","each","self","split","axis","scale","team","players","axisTop","plusMinus","colors","abs","texts","playerName","plotArea","dots","graphObject","playerId","ast","tov","headShots","d3","stat","allPlayers","allConnections","playerConnections","connections","allPlayerMap","JSON","stringify","activeConnections","filter","some","activePlayerIDs","replace","unshift","newPlayerMap","forEach","element","playerMap","playerMapConnections","playerMapFocus","updateMap","n","firstLevel","playersToIgnore","push","j","prevLevel","nthLevelPlayerIds","player1Id","player2Id","player1","player2","Set","concat","nthPlayerMap","statTranslationArray","groupSet","gp","w","l","wPct","fgm","fga","fgPct","fG3M","fG3A","fg3Pct","ftm","fta","ftPct","oreb","dreb","reb","stl","blk","blka","pf","pfd","pts","nbaFantasyPts","dD2","tD3","searchValue","App","state","teams","activeTeam","activePlayer","viewMode","switchSort","teamsLoaded","playerLoaded","graphStyle","setState","showNthLevelConnections","getSuggestions","newValue","suggestionValue","suggestionIndex","sectionIndex","method","showFirstLevelConnections","inputValue","deburr","trim","toLowerCase","inputLength","count","suggestionMasterList","keep","undefined","initPlayerMap","API","then","loadTeams","res","catch","err","property","currentState","tableSort","GRAPHS","getTeam","teamId","D3","resetPlayerMap","newState","CONNECTIONS","levels","getPlayer","teamIndex","playerIndex","profile","createStatTable","stats","statTable","hasOwnProperty","indexOf","callUpdated","nthLevel","playerMapPlayerView","updated","class","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ad63d31c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\n\nvar TeamItem = (props) =>{\n    return (\n    \t<button className = {`team-btn ${props.active}`} onClick = {() =>{props.teamFilter(props.tricode)}}>\n      \t<img  data-tricode = {props.tricode} src = {props.logo}></img>\n     \t</button>\n    )\n  \n}\n\nexport default TeamItem;\n","import React, { Component } from \"react\";\nimport TeamItem from \"./TeamItem.js\"\n\nvar TeamBar = (props) =>{\n    return (\n      <div className = {`logo-sidebar ${props.active}`}>\n      {props.children}\n      </div>\n    )\n  \n}\n\nexport default TeamBar;\n","import React, { Component } from \"react\";\n\n\nvar Graph = (props) =>{\n    return (\n       <div >\n       <h3>{props.graphName}</h3>\n       <label for =\"Pie\">Pie</label>\n    \t<input onClick ={(event) =>{props.toggleGraphType(event)}} type = \"radio\" name = \"graphSelector\" value = \"Pie\"/>\n    \t <label for =\"Bar\">Bar</label>\n    \t<input onClick ={(event) =>{props.toggleGraphType(event)}} type = \"radio\" name = \"graphSelector\" value = \"Bar\"/>\n\n       \t<svg className = {props.className}>\n       \t<g className = \"graph-inner\">\n       \t</g>\n       \t</svg>\n       </div>\n    )\n  \n}\n\nexport default Graph;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Autosuggest from 'react-autosuggest';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popper from '@material-ui/core/Popper';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nfunction renderInputComponent(inputProps) {\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps;\n\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputRef: node => {\n          ref(node);\n          inputRef(node);\n        },\n        classes: {\n          // input: classes.input,\n        },\n      }}\n      {...other}\n    />\n  );\n}\n\n\n\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\n  const matches = match(suggestion.name, query);\n  const parts = parse(suggestion.name, matches);\n\n  return (\n    <MenuItem selected={isHighlighted} component=\"div\">\n      <div  >\n        {parts.map((part, index) =>\n          part.highlight ? (\n            <span key={String(index)} style={{ fontWeight: 500 }}>\n              {part.text}\n            </span>\n          ) : (\n            <strong key={String(index)} style={{ fontWeight: 300 }}>\n              {part.text}\n            </strong>\n          ),\n        )}\n      </div>\n    </MenuItem>\n  );\n}\n\n\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.name;\n}\n\nconst styles = theme => ({\n  root: {\n    height: 250,\n    flexGrow: 1,\n    position:'fixed',\n    top:'60px',\n    width:'250px'\n  },\n  container: {\n    position: 'relative',\n  },\n  suggestionsContainerOpen: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing.unit,\n    left: 0,\n    right: 0,\n  },\n  suggestion: {\n    display: 'block',\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: 'none',\n  },\n  divider: {\n    height: theme.spacing.unit * 2,\n  },\n});\n\n\n\nvar IntegrationAutosuggest = (props) => {\n\n\n\n\n  // render() {\n    // const { classes } = this.props;\n\n    const autosuggestProps = {\n      renderInputComponent,\n      suggestions: props.suggestions,\n      onSuggestionsFetchRequested: props.handleSuggestionsFetchRequested,\n      onSuggestionsClearRequested: props.handleSuggestionsClearRequested,\n      getSuggestionValue,\n      renderSuggestion,\n      onSuggestionSelected: props.handleSelectionSelected\n    };\n\n    return (\n      <div className = \"player-map-autocomplete\">\n        <Autosuggest\n          {...autosuggestProps}\n          inputProps={{\n            placeholder: 'Search for a Player',\n            value: props.value,\n            onChange: props.handleChange('single'),\n          }}\n          theme={{\n            // container: classes.container,\n            // suggestionsContainerOpen: classes.suggestionsContainerOpen,\n            // suggestionsList: classes.suggestionsList,\n            // suggestion: classes.suggestion,\n          }}\n          renderSuggestionsContainer={options => (\n            <Paper {...options.containerProps} square>\n              {options.children}\n            </Paper>\n          )}\n        />\n\n      </div>\n    );\n  \n}\n\n// IntegrationAutosuggest.propTypes = {\n//   classes: PropTypes.object.isRequired,\n// };\n\nexport default withStyles(styles)(IntegrationAutosuggest);\n","import React, { Component } from \"react\";\nimport { select, selectAll, enter, event, each } from 'd3-selection'\nimport { scaleLinear, scaleBand } from 'd3-scale'\nimport { axisTop, axisBottom, axisLeft } from 'd3-axis'\nimport { extent, max, sum } from 'd3-array'\nimport { transition } from 'd3-transition'\nimport { packSiblings, pack, hierarchy } from 'd3-hierarchy'\nimport DragScrollProvider from 'drag-scroll-provider'\nimport Autocomplete from './autocomplete'\n\nconst styles = {\n    transform: `translate(50%, 50%)`\n};\n\nclass PlayerMap extends Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.props.hoverPlayer == nextProps.hoverPlayer) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    render() {\n\n        var height = 1000\n        var width = 1000\n\n        let root = pack().size([width, height]).padding(15)(hierarchy(this.props.playerNodes)\n            .sum(d => d.r));\n\n        let nodes = root.descendants();\n        nodes - nodes.shift();\n\n        return (\n\n            <DragScrollProvider vertical = 'true' horizontal = 'true' threshold={0.040}>\n    {({ onMouseDown, ref }) => (\n      \n        <div className=\"player-map scrollable\"\n          ref={ref}\n          onMouseDown={onMouseDown}>\n\n        <a onClick = {this.props.reset} className = \"reset-playerMap\">Back To All</a>\n        <svg height = {width}  width = {height} className = {this.props.className}  >\n        {\n            nodes.map((player,index) => (\n            <pattern id = {player.data._id + player.depth} x = \"0%\" y =\"0%\" height = \"100%\" width= \"100%\" key = {player.data._id + player.depth}>\n\n            {player.data.type == \"player\" ? <circle  fill= \"white\" r = \"800px\" ></circle>:\"\"}\n\n            {player.data.type == \"team\" ?\n                                 <image \n                xlinkHref= {`https://www.nba.com/assets/logos/teams/primary/web/${player.data._id.toUpperCase()}.svg`}\n                     width = { player.r * 2 + \"px\"}\n                    height = { player.r * 2 + \"px\"}\n                    x = \"0%\"\n                    y = \"0%\"></image>\n:\n                 <image \n\n                xlinkHref= {`https://d2cwpp38twqe55.cloudfront.net/req/201902151/images/players/${player.data._id}.jpg`}\n                    width = { player.r * 2 * 0.84 + \"px\"}\n                    height = { player.r * 2 * 0.84 + \"px\"}\n                    x = \"0%\"\n                    y = \"0%\"></image>\n\n}\n            </pattern>\n            )\n        )\n    }\n\n        <g className = \"graph-inner\" transform = {`translate(-${width}px,-${height}px)`} >\n        <g>\n\n         \n            \n        {nodes.map((player,index) => (\n\n            <g fill = {player.data.type == \"nest\" ? \"black\" : \"\"} key = {player.data.type == \"nest\" ? player.name : player.data._id + player.depth} id = {`move-${player.data._id}`} onClick = {player.data.type == \"player\" ? () => this.props.firstLevelConnections(player) : () =>{}} className = {player.data.type == \"player\" ? \"group group-player\" : player.data.type == \"team\" ? \"group group-team\" : \"group-nest\"} width = { player.r * 2 * 0.84 + \"px\"}  transform = {`translate(${player.x},${player.y})`}>\n           \n            {player.data.type == \"team\" ?\n             <circle stroke =\"black\" fill = {\"url(#\" + player.data._id + player.depth + \")\"}  r ={player.r*1} >\n            </circle> \n            : player.data.type == \"player\" ?\n            <circle onMouseEnter = {() =>{this.props.playerHover(player.data._id)}}  fill = {\"url(#\" + player.data._id + player.depth +  \")\"}  r ={player.r*0.84}  >\n            </circle>\n            :\n            <circle  stroke =\"black\" fill = {\"rgba(0,0,0,0.4\"}  r ={player.r*0.84}  >\n            </circle>\n            }\n\n            </g>\n            )\n        )}\n\n      \n\n\n        </g>\n        </g>\n        </svg>\n\n      </div>\n      )}\n    </DragScrollProvider>\n        )\n\n    }\n}\n\nexport default PlayerMap;","import React, { Component } from \"react\";\n\nvar ActivePlayer = (props) => {\n    return (\n        props.active ?\n        <div className = \"active-player\">\n \t<img  src = {`https://d2cwpp38twqe55.cloudfront.net/req/201902151/images/players/${props.active.data._id}.jpg`}></img>\n \t       <div className = \"active-player-name\">\n \t       \t\t{props.active.data.name}\n \t       </div>\n \t       <input value = {props.depthNumber} type = \"number\" min =\"1\" onChange ={props.handleNumberChange}></input>\n\n\t \t       </div> :\n        \"\"\n    )\n\n}\n\nexport default ActivePlayer;","import React, { Component } from \"react\";\n\nvar HoverPlayer = (props) => {\n    return (\n        props.hover ?\n        <div className = \"hover-player\">\n \t<img  src = {`https://d2cwpp38twqe55.cloudfront.net/req/201902151/images/players/${props.hover._id}.jpg`}></img>\n \t       <div className = \"hover-player-name\">\n \t       \t\t{props.hover.name}\n \t       </div>\n\n\t \t       </div> :\n        \"\"\n    )\n\n}\n\nexport default HoverPlayer;","import axios from \"axios\";\n\nexport default {\n  // Gets all books\n  getTeams: function() {\n    return axios.get(\"/api/teams\");\n  },\n  // Gets the book with the given id\n  getTeam: function(id) {\n    return axios.get(\"/api/teams/\" + id);\n  },\n  getPlayer: function(id) {\n    return axios.get(\"/api/player/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  },\n  playerMap: function(bookData) {\n    return axios.get(\"/api/playerMap\");\n  }\n};\n","import { select, selectAll, enter, event, each } from 'd3-selection'\nimport { scaleLinear, scaleBand } from 'd3-scale'\nimport { axisTop, axisBottom, axisLeft } from 'd3-axis'\nimport { extent, max, sum } from 'd3-array'\nimport { transition } from 'd3-transition'\nimport { packSiblings } from 'd3-hierarchy'\n\n\nexport default {\n\n    playerMap: function(graphObj) {\n        console.log(graphObj);\n        let width = 1000;\n        let height = 1000;\n        let svg = select(\".player-connections\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n\n        svg = select(\".player-connections .graph-inner\").attr(\"width\", width)\n            .attr(\"height\", height)\n\n\n        var packed = packSiblings(graphObj.data);\n\n        // console.log(graphObj);\n\n        svg = svg.append(\"g\")\n            .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n        // var color = d3.scaleOrdinal(d3.schemeCategory10);\n\n\n        var defs = select(\".player-connections\").append(\"defs\").selectAll(\"pattern\").data(graphObj.data).enter().append(\"pattern\")\n            .attr(\"id\", function(d) {\n                return d._id\n            }).attr(\"x\", \"0%\").attr(\"y\", \"0%\").attr(\"height\", \"100%\").attr(\"width\", \"100%\")\n\n\n        defs.append(\"circle\").attr(\"fill\", \"white\").attr(\"x\", \"0%\").attr(\"y\", \"0%\").attr(\"r\", \"250px\").attr(\"width\", \"250px\")\n        defs.append(\"image\").attr(\"xlink:href\", function(d) {\n            return \"https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190/\" + d._id + \".png\";\n\n        }).attr(\"x\", \"0%\").attr(\"y\", \"1%\").attr(\"height\", function(d) {\n            return d.r * 2 * 0.84 + \"px\";\n        }).attr(\"width\", function(d) {\n            return d.r * 2 * 0.84 + \"px\";\n        })\n\n\n\n\n        var lines = svg.selectAll('line')\n            .data(graphObj.connections)\n            .enter()\n            .append(\"g\").append('line')\n            .attr(\"x1\", function(e) {\n                let player = e.players.split(\"|\")[0];\n                // console.log(player)\n                let playerPartner = graphObj.data.filter(x => x._id == player);\n                // console.log(playerPartner);\n                return playerPartner[0].x;\n            })\n            .attr(\"y1\", function(e) {\n                let player = e.players.split(\"|\")[0]\n                let playerPartner = graphObj.data.filter(x => x._id == player);\n                // console.log(playerPartner);\n                return playerPartner[0].y;\n            })\n\n            .attr(\"x2\", function(e) {\n                let player = e.players.split(\"|\")[1]\n                let playerPartner = graphObj.data.filter(x => x._id == player);\n                // console.log(playerPartner);\n                return playerPartner[0].y;\n\n                // let playerPartner = graphObj.filter(x=>x._id == e._id);\n                // // console.log(playerPartner);\n                // return playerPartner[0].x;\n            })\n            .attr(\"y2\", function(e) {\n                let player = e.players.split(\"|\")[1]\n                let playerPartner = graphObj.data.filter(x => x._id == player);\n                // console.log(playerPartner);\n                return playerPartner[0].y;\n            }).attr(\"stroke\", \"black\")\n            .attr(\"stroke-width\", \"1\")\n\n        // })\n\n        let nodes = svg.selectAll('circle')\n            .data(graphObj.data)\n            .enter()\n            .append(\"circle\")\n            .attr(\"cx\", function(d) {\n                return d.x\n            })\n            .attr(\"cy\", function(d) {\n                return d.y\n            })\n            .attr(\"r\", function(d) {\n                return d.r * 0.84\n            })\n            .attr(\"fill\", function(d) {\n                return \"url(#\" + d._id + \")\"\n            }).attr(\"stroke\", \"lightblue\")\n            .attr(\"onclick\", function(d) {\n                return \"console.log('dsds'); clickReact('\" + d._id + \"')\";\n            }).on(\"click\",function(){\n                select(this).data(graphObj.data.filter(x=>x.name == \"Ben Simmons\"))\n            })\n\n\n        // .attr(\"oncl\")\n\n\n        // for (let player of graphObj){\n        //     console.log(player.hasPlayedWith);\n        //     var lines = svg.selectAll(null).data(player.hasPlayedWith)\n        //     .enter()\n        //     .append(\"path\")\n\n        // }\n\n\n\n        // dots = svg.selectAll('circle').data(data);\n\n\n        // dots.enter().append(\"circle\").merge(arcs)\n\n\n    },\n    pieChart: function(graphObj) {\n        let data = graphObj.dataSet;\n        let width = 1000;\n        let height = 1000;\n        let svg = select(graphObj.target)\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n        svg = select(graphObj.target + \" .graph-inner\").attr(\"width\", width)\n            .attr(\"height\", height).attr(\"transform\", \"translate(0,0)\")\n        svg.selectAll(\".x-axis\").remove()\n        svg.selectAll(\".y-axis\").remove()\n        svg.selectAll(\"rect\").remove()\n\n        let total = sum(data, function(d) { return d.yValue; });\n        data.sort((a, b) => a['yValue'] - b['yValue'])\n\n        data.map((val, index) => {\n            data[index].yValue = data[index].yValue * 360 / total\n            // data[index].startAngle = index == 0 ? 0 : sum(data.slice(0, index), function(d){return d.yValue})\n            // data[index].startAngle = data[index].startAngle*360 / total\n\n        })\n        data.map((val, index) => {\n            // data[index].yValue = data[index].yValue*360 / total\n            data[index].startAngle = index == 0 ? 0 : sum(data.slice(0, index), function(d) { return d.yValue })\n            // data[index].startAngle = data[index].startAngle*360 / total\n\n        })\n        let colorScale = scaleLinear().domain(extent(data, function(d) { return d.yValue; })).range([graphObj.colorScale[1], graphObj.colorScale[0]]);\n\n        // console.log(sum(data, function(d) { return d.yValue; }));\n\n        console.log(data)\n        let div = select(\"body\").append(\"div\")\n            .attr(\"class\", \"tooltip\")\n            .style(\"opacity\", 0);\n        let arcs = svg.selectAll('path').data(data);\n\n        arcs.enter().append(\"path\").merge(arcs).on(\"mouseover\", function(d) {\n                // console.log(\"Dsds\")\n                select(this).transition().style(\"opacity\", \"1\")\n\n                div.transition()\n                    .duration(200)\n                    .style(\"opacity\", .9);\n                div.html(bigHead(d.id) + '<div class = \"name\">' + d.xValue + '</div>')\n                    .style(\"left\", (event.pageX) + \"px\")\n                    .style(\"top\", (event.pageY - 28) + \"px\")\n                    .style(\"padding\", \"20px\")\n                // .style(\"background\",graphObj.colorScale[0] );\n\n            })\n            .on(\"mouseout\", function(d) {\n                select(this).transition().style(\"opacity\", \"0.9\")\n\n                div.transition()\n                    .duration(500)\n                    .style(\"opacity\", 0);\n            }).transition()\n            .style(\"opacity\", \"0.9\")\n            // .style(\"transition\", \"0.9\")\n\n            .attr(\"d\", function(d, i) {\n                // console.log(i);\n                // console.log(arcs.data());\n                // if(i == 0){\n                return getSectorPath(width / 2, height / 2, width, d.startAngle, d.yValue + d.startAngle)\n                // }else{\n                //     return getSectorPath(100, 100, 100, arcs.data[i-1].yValue, d.yValue*360 / total )\n\n                // }\n            })\n            .attr(\"fill\", function(d) { return colorScale(d.yValue) })\n        arcs.exit().remove();\n\n    },\n    barGraph: function(graphObj) {\n\n\n\n        let data = graphObj.dataSet;\n        var min = Math.min(...data.map(d => d.yValue));\n        var max = Math.max(...data.map(d => d.yValue));\n        // console.log(data);\n        let totalHeight = 800;\n        let margin = { top: 60, right: 60, bottom: 60, left: 60 };\n        let height = totalHeight - margin.top - margin.bottom;\n        let width = data.length * 50;\n        const xScale = scaleBand()\n            .range([0, width])\n            .domain(data.map((s) => s.xValue))\n            .padding(20)\n        let svg = select(graphObj.target)\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", totalHeight)\n\n        svg = select(graphObj.target + \" .graph-inner\")\n        // .attr(\"transform\", \"translate(\" + margin.left + \",\" +margin.top  +\")\")\n        svg.selectAll(\".x-axis\").remove()\n        svg.selectAll(\".y-axis\").remove()\n        svg.selectAll(\"path\").remove()\n        svg.attr(\"width\", width)\n            .attr(\"height\", height)\n            .attr(\"transform\", \"translate(\" + margin.left + \", \" + margin.top + \")\");\n        let xAxisCall = axisLeft();\n        let yScale = scaleLinear();\n        let colorScale = scaleLinear().domain(extent(data, function(d) { return d.yValue; })).range([graphObj.colorScale[1], graphObj.colorScale[0]]);\n        // svg.attr(\"height\", totalHeight)\n        // let graphInner = svg.append(\"g\").attr(\"class\", \"graph-inner\");\n        // let findMax = [...data];\n        // let dataMax = Math.max(findMax.map(x=>x.yValue));\n        let y = scaleLinear()\n            .domain([0, max])\n            .range([0, height]);\n        // console.log(data);\n        let bars = svg.selectAll('rect').data(data);\n        bars.enter().append(\"rect\").merge(bars).transition()\n            .attr(\"height\", function(d) { return y(d.yValue) })\n            .attr(\"y\", function(d) { return height - y(d.yValue) })\n            .attr(\"fill\", function(d) { return colorScale(d.yValue) })\n        bars.exit().remove();\n\n        // let texts = svg.selectAll('text').data(data);\n        // texts.enter().append(\"text\").merge(texts)\n        //     .attr(\"x\", function(d) {\n        //         return d.plusMinus > 0 ? x(0) - 10 : x(0) + 10\n\n        //     })\n        //     .style(\"text-anchor\", function(d) { return d.plusMinus > 0 ? \"end\" : \"start\" })\n        //     .attr(\"y\", 15)\n        //     .attr(\"dy\", \"1.25em\")\n        //     .transition()\n        //     .text(function(d) { return d.playerName + \": \" + d.plusMinus; });\n        // texts.exit().remove();\n\n        svg.selectAll('rect').style(\"width\", \"40px\");\n        svg.selectAll('rect').attr(\"x\", function(d, i) { return xScale(d.xValue) - 20 });\n        svg.selectAll('text').attr(\"y\", function(d, i) { return (30 * i) + \"px\" });\n\n\n\n\n\n\n        svg.append('g')\n            .attr('transform', `translate(0, ${height})`)\n            .attr(\"class\", \"x-axis\")\n            .call(axisBottom(xScale))\n            .selectAll('.x-axis .tick text') // select all the x tick texts\n            .call(function(t) {\n                t.each(function(d) { // for each one\n                    var self = select(this);\n                    var s = self.text().split(' '); // get the text and split it\n                    self.text(''); // clear it out\n                    self.append(\"tspan\") // insert two tspans\n                        .attr(\"x\", 0)\n                        .attr(\"dy\", \".8em\")\n                        .text(s[0]);\n                    self.append(\"tspan\")\n                        .attr(\"x\", 0)\n                        .attr(\"dy\", \".8em\")\n                        .text(s[1]);\n                })\n            })\n\n\n        let axis = svg.append(\"g\")\n            .attr(\"class\", \"y-axis\")\n            .attr(\"transform\", \"translate(0,0)\")\n        yScale.domain([0, max]).range([height, 0]);\n        xAxisCall.scale(yScale)\n        axis.call(xAxisCall);\n\n\n\n\n    },\n    initPlusMinus: function(team) {\n\n\n        let data = team.players;\n        let totalWidth = 800;\n        let margin = { top: 20, right: 30, bottom: 30, left: 40 };\n        let width = totalWidth - margin.left - margin.right;\n        let height = 700;\n        let svg = select(\".plus-minus svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n        svg.selectAll(\".x-axis\").remove()\n        let xAxisCall = axisTop();\n        let xScale = scaleLinear()\n        let colorScale = scaleLinear().domain(extent(team.players, function(d) { return d.plusMinus; })).range([team.colors[1], team.colors[0]]);\n        height = data.length * 30\n        svg.attr(\"height\", data.length * 30 + margin.top + margin.bottom)\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n        let x = scaleLinear()\n            .domain(extent(data, function(d) { return d.plusMinus; }))\n            .range([150, width - 200]);\n        let bars = svg.selectAll('rect').data(data);\n        bars.enter().append(\"rect\").merge(bars).transition()\n            .attr(\"width\", function(d) { return Math.abs(x(d.plusMinus) - x(0)); })\n            .attr(\"x\", function(d) { return x(Math.min(0, d.plusMinus)); })\n            .attr(\"fill\", function(d) { return colorScale(d.plusMinus) })\n        bars.exit().remove();\n\n        let texts = svg.selectAll('text').data(data);\n        texts.enter().append(\"text\").merge(texts)\n            .attr(\"x\", function(d) {\n                return d.plusMinus > 0 ? x(0) - 10 : x(0) + 10\n\n            })\n            .style(\"text-anchor\", function(d) { return d.plusMinus > 0 ? \"end\" : \"start\" })\n            .attr(\"y\", 15)\n            .attr(\"dy\", \"1.25em\")\n            .transition()\n            .text(function(d) { return d.playerName + \": \" + d.plusMinus; });\n        texts.exit().remove();\n\n        svg.selectAll('rect').style(\"height\", \"30px\");\n        svg.selectAll('rect').attr(\"y\", function(d, i) { return (30 * i) + \"px\" });\n        svg.selectAll('text').attr(\"y\", function(d, i) { return (30 * i) + \"px\" });\n\n\n\n        var min = Math.min(...data.map(x => x.plusMinus));\n        var max = Math.max(...data.map(x => x.plusMinus));\n        let axis = svg.append(\"g\")\n            .attr(\"class\", \"x-axis\")\n            .attr(\"transform\", \"translate(0,\" + 100 + \")\")\n        xScale.domain([min, max]).range([150, width - 200]);\n        xAxisCall.scale(xScale)\n        axis.call(xAxisCall);\n        axis.attr(\"transform\", \"translate(0,\" + (height + 30) + \")\")\n\n\n    },\n    lineGraph: function(graphObj) {\n\n\n        let data = graphObj.dataSet\n        let totalWidth = 800;\n        let margin = { top: 20, right: 30, bottom: 30, left: 40 };\n        let width = totalWidth - margin.left - margin.right;\n        let height = 700;\n        let plotArea = select(graphObj.target)\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        plotArea.select(\".scatter-x\").remove()\n        plotArea.select(\".scatter-y\").remove()\n\n\n        let div = select(\"body\").append(\"div\")\n            .attr(\"class\", \"tooltip\")\n            .style(\"opacity\", 0);\n\n\n        let abbrev;\n        let xAxisCall = axisTop();\n        let xScale = scaleLinear()\n        let colors\n\n        var x = scaleLinear().range([margin.left, width]);\n        var y = scaleLinear().range([height, 0 + margin.top]);\n\n\n        x.domain(extent(data, function(d) { return d.xValue; }));\n        y.domain([0, max(data, function(d) { return d.yValue; })]);\n\n\n        let dots = plotArea.selectAll('circle').data(data);\n\n        plotArea.selectAll(\"line\").remove();\n        plotArea.append(\"line\") // attach a line\n            .style(\"stroke\", \"black\") // colour the line\n            .attr(\"x1\", function(d) { return margin.left; }) // x position of the first end of the line\n            .attr(\"y1\", function(d) { return y(0); }) // y position of the first end of the line\n            .attr(\"x2\", function(d) { return x(10); }) // x position of the second end of the line\n            .attr(\"y2\", function(d) { return y(10); })\n\n        dots.enter().append(\"circle\").merge(dots)\n            .on(\"mouseover\", function(d) {\n                // console.log(\"Dsds\")\n                div.transition()\n                    .duration(200)\n                    .style(\"opacity\", .9);\n                div.html(d.name)\n                    .style(\"left\", (event.pageX) + \"px\")\n                    .style(\"top\", (event.pageY - 28) + \"px\");\n            })\n            .on(\"mouseout\", function(d) {\n                div.transition()\n                    .duration(500)\n                    .style(\"opacity\", 0);\n            }).attr(\"r\", function(d) {\n                if (d.yValue != 0) {\n                    return 3 * d.xValue / d.yValue\n                } else {\n                    return 3;\n                }\n            }).transition()\n            .attr(\"cx\", function(d) { return x(d.xValue); })\n            .attr(\"cy\", function(d) { return y(d.yValue); })\n            .attr(\"fill\", \"blue\")\n\n\n\n\n\n        // Add the X Axis\n        plotArea.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .attr(\"class\", \"scatter-x\")\n\n            .call(axisBottom(x));\n\n        // // Add the Y Axis\n        plotArea.append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",0)\")\n\n            .attr(\"class\", \"scatter-y\")\n            .call(axisLeft(y));\n\n    }\n};\n\n\nfunction getSectorPath(x, y, outerDiameter, a1, a2) {\n    const degtorad = Math.PI / 180;\n    const halfOuterDiameter = outerDiameter / 2;\n    const cr = halfOuterDiameter - 5;\n    const cx1 = (Math.cos(degtorad * a2) * cr) + x;\n    const cy1 = (-Math.sin(degtorad * a2) * cr) + y;\n    const cx2 = (Math.cos(degtorad * a1) * cr) + x;\n    const cy2 = (-Math.sin(degtorad * a1) * cr) + y;\n    let largeFlag = 0\n    console.log(a2 - a1);\n    if (a2 - a1 > 180) {\n        largeFlag = 1;\n    }\n\n    return \"M\" + x + \" \" + y + \" \" + cx1 + \" \" + cy1 + \" A \" + cr + \" \" + cr + \" 0 \" + largeFlag + \" 1 \" + cx2 + \" \" + cy2 + \"Z\";\n}\n\nfunction bigHead(id) {\n    let img = \"https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190/\" + id + \".png\";\n    img = \"<img src = '\" + img + \"'>\";\n    return img;\n}\n// import axios from \"axios\";\n\n// export default {\n//   // Gets all books\n//   getTeams: function() {\n//     return axios.get(\"/api/teams\");\n//   },\n//   // Gets the book with the given id\n//   getTeam: function(id) {\n//     return axios.get(\"/api/teams/\" + id);\n//   },\n//   // Deletes the book with the given id\n//   deleteBook: function(id) {\n//     return axios.delete(\"/api/books/\" + id);\n//   },\n//   // Saves a book to the database\n//   saveBook: function(bookData) {\n//     return axios.post(\"/api/books\", bookData);\n//   }\n// };","import d3 from './D3.js'\n\nexport default {\n    teamAssistToTurnover(team) {\n        let graphObject = {}\n        graphObject.dataSet = team.players.map(x => { return { id: x.playerId, name: x.playerName, xValue: x.ast, yValue: x.tov } });\n        console.log(graphObject)\n        graphObject.target = \".ast-to-tov\"\n        graphObject.headShots = true\n        d3.lineGraph(graphObject)\n    },\n    statGraph(stat, team, style) {\n        let graphObject = {}\n        graphObject.dataSet = team.players.map(x => { return { id: x.playerId, xValue: x.playerName, yValue: x[stat] } });\n        graphObject.target = \".stat-graph\"\n        graphObject.colorScale = team.colors;\n        switch (style) {\n            case \"Pie\":\n                d3.pieChart(graphObject);\n                break;\n            case \"Bar\":\n                d3.barGraph(graphObject);\n                break;\n        }\n\n    },\n    \n};\n\n\n\n\n\n// import axios from \"axios\";\n\n// export default {\n//   // Gets all books\n//   getTeams: function() {\n//     return axios.get(\"/api/teams\");\n//   },\n//   // Gets the book with the given id\n//   getTeam: function(id) {\n//     return axios.get(\"/api/teams/\" + id);\n//   },\n//   // Deletes the book with the given id\n//   deleteBook: function(id) {\n//     return axios.delete(\"/api/books/\" + id);\n//   },\n//   // Saves a book to the database\n//   saveBook: function(bookData) {\n//     return axios.post(\"/api/books\", bookData);\n//   }\n// };","import deburr from 'lodash/deburr';\nimport Autosuggest from 'react-autosuggest';\n\nfunction getSuggestions(value) {\n  const inputValue = deburr(value.trim()).toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n\n  return inputLength === 0\n    ? []\n    : this.state.suggestionMasterList.filter(suggestion => {\n        const keep =\n          count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n        if (keep) {\n          count += 1;\n        }\n\n        return keep;\n      });\n}\n\n\n\nexport default {\n   handleSuggestionsFetchRequested : ({ value }) => {\n    this.setState({\n      suggestions: getSuggestions(value),\n    });\n  },\n\n  handleSuggestionsClearRequested :() => {\n    this.setState({\n      suggestions: [],\n    });\n  },\n\n  handleChange : name => (event, { newValue }) => {\n    this.setState({\n      [name]: newValue,\n    });\n  },\n\n}","// import d3 from './D3.js'\n\nexport default {\n    firstLevelConnections(player, allPlayers, allConnections) {\n        let playerId = player.data._id;\n        let playerConnections = player.data.connections\n        // let allPlayerMap = JSON.parse(JSON.stringify({ allPlayers }));\n        let allPlayerMap = JSON.parse(JSON.stringify({ ...allPlayers }))\n        let activeConnections = allConnections.filter(x => playerConnections.some(y => y == x._id))\n        let activePlayerIDs = activeConnections.map(x => {\n            let player = x.players.replace(playerId + \"|\", \"\")\n            player = player.replace(\"|\" + playerId, \"\")\n            return player\n        })\n        activePlayerIDs.unshift(playerId);\n\n\n\n\n        let newPlayerMap = allPlayerMap.children.filter(\n            function(team) {\n                // console.log(team.children);\n                let teamChildrenFilter = team.children.filter(player => activePlayerIDs.some(x => x == player._id));\n                // console.log(teamChildrenFilter);\n                if (teamChildrenFilter.length == 0) {\n                    return false;\n                } else {\n                    return true;\n                }\n            })\n        activePlayerIDs.shift();\n\n\n        newPlayerMap = newPlayerMap.map(team => {\n            team.children = team.children.filter(player => activePlayerIDs.some(x => x == player._id));\n            return team;\n        })\n        // console.log(newPlayerMap);\n        // console.log(player)\n        newPlayerMap.map(x => {\n            if (x._id == player.data.team) {\n                // player.data.r = 1000;\n                x.children.unshift(player.data)\n                return x;\n            } else {\n                return x;\n            }\n        })\n        // newPlayerMap[player.data.team].unshift(player.data);\n        // newPlayerMap\n        newPlayerMap = {\n            name: \"PlayerMap\",\n            children: newPlayerMap\n        }\n        newPlayerMap.children.forEach(function(element, index) {\n            element.index = index;\n            element.children.forEach(function(x, index) {\n                if (x._id == player.data._id) {\n                    x.r = 1000\n\n                } else if (x.length == \"NA\") {\n                    x.r = 50\n                    x.value = 50;\n                } else {\n                    x.r = x.length * 8;\n                    x.value = x.length * 8;\n                }\n                // suggestionMasterList.push(x);\n\n            })\n\n        });\n        // console.log(newPlayerMap);\n        // this.setState({\n        //     playerMap: newPlayerMap,\n        //     playerMapConnections: activeConnections,\n        //     playerMapFocus: player\n        // })\n        return {\n            playerMap: newPlayerMap,\n            playerMapConnections: activeConnections,\n            playerMapFocus: player,\n            updateMap:true\n        }\n\n        // activePlayers = allPlayerMap.filter(x => activePlayers.some(y => y == x._id))\n        // activePlayers.unshift(player)\n        // activePlayers = activePlayers.map((x, index) => {\n        //     x.r = x.length * 8;\n        //     return x\n        // });\n        // // console.log(activePlayers)\n        // this.setState({\n        //     playerMapConnections: activeConnections,\n        //     playerMap: activePlayers,\n        //     playerMapFocus: 0\n        // })\n\n\n    },\n    nthLevelConnections(n, player, firstLevel, allPlayers, activeConnections, allConnections) {\n        let allPlayerMap = JSON.parse(JSON.stringify({ ...allPlayers }))\n        let playersToIgnore = []\n        let playerConnections = []\n        let firstLevelConnections = activeConnections;\n        // console.log(activeConnections)\n        // console.log(firstLevelConnections)\n\n        playersToIgnore.push(player.data._id);\n        for (var i = 0; i < firstLevel.children.length; i++) {\n            for (var j = 0; j < firstLevel.children[i].children.length; j++) {\n                playersToIgnore.push(firstLevel.children[i].children[j]._id)\n            }\n        }\n        // playersToIgnore.shift();\n        // console.log(playersToIgnore)\n        firstLevel.type = \"nest\"\n        let prevLevel = firstLevel\n        let newPlayerMap\n        newPlayerMap = firstLevel\n        let nthLevelConnections\n        for (var i = 1; i < n; i++) {\n            let nthLevelPlayerIds = [];\n            let nthLevelConnections = allConnections.filter(\n                function(x) {\n                    let player1Id = x.players.split(\"|\")[0];\n                    let player2Id = x.players.split(\"|\")[1];\n                    let player1 = playersToIgnore.some(x => player1Id == x);\n                    let player2 = playersToIgnore.some(x => player2Id == x);\n                    // console.log(player1Id +\": \" + player1 )\n                    // console.log(player2Id +\": \" + player2 )\n\n                    if (player1 && player2) {\n                        return false\n                    }\n                    if (player1 && !player2) {\n                        console.log(player1Id + \" + \" + player2Id + \" added\")\n                        nthLevelPlayerIds.push(player2Id)\n                        return true\n                    }\n                    if (!player1 && player2) {\n                        console.log(player1Id + \" + \" + player2Id + \" added\")\n                        nthLevelPlayerIds.push(player1Id)\n\n                        return true\n                    }\n\n                })\n            nthLevelPlayerIds = [...new Set(nthLevelPlayerIds)];\n            playersToIgnore = nthLevelPlayerIds.concat(playersToIgnore);\n            // console.log(nthLevelPlayerIds);\n            console.log(playersToIgnore)\n            // console.log(playersToIgnore)\n\n            let nthPlayerMap = allPlayerMap.children.filter(\n                function(team) {\n                    // console.log(team.children);\n                    let teamChildrenFilter = team.children.filter(player => nthLevelPlayerIds.some(x => x == player._id));\n                    // console.log(teamChildrenFilter);\n                    if (teamChildrenFilter.length == 0) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                })\n            nthPlayerMap = nthPlayerMap.map(team => {\n                team.children = team.children.filter(player => nthLevelPlayerIds.some(x => x == player._id));\n                return team;\n            })\n            // console.log(nthPlayerMap)\n            nthPlayerMap.unshift(prevLevel);\n            newPlayerMap = {\n                type: \"nest\",\n                name: i + \"level\",\n                children: nthPlayerMap\n            }\n            prevLevel = newPlayerMap\n            // firstLevel.type = \"nest\"\n            // newPlayerMap.children.unshift(\n            //     firstLevel\n            // )\n\n            // console.log(newPlayerMap)\n           \n            // console.log(nthLevelConnections)\n            // let activeConnections = allConnections.filter(x => playerConnections.some(y => y == x._id))\n            // let activePlayerIDs = activeConnections.map(x => {\n            //     let player = x.players.replace(playerId + \"|\", \"\")\n            //     player = player.replace(\"|\" + playerId, \"\")\n            //     return player\n            // })\n            // activePlayerIDs.unshift(playerId);\n\n\n        }\n\n        console.log(newPlayerMap);\n         return {\n            playerMap: newPlayerMap,\n            playerMapConnections: firstLevelConnections.concat(nthLevelConnections),\n            updateMap:true\n\n            }\n\n        // {\n        //     name: \"nth level\"\n        //     children:[\n        //     {\n        //         _id:teamId,\n        //         children:\n        //         [\n        //         bunch of players\n        //         ]\n        //     },\n        //     name:\"nth level - 1\"\n        //     children:[\n        //     {   \n        //         _id:teamId,\n        //         childnre:[\n        //         bunch of players]\n        //     }]\n        //     ]\n        // }\n    }\n\n};\n\n\n\n\n\n// import axios from \"axios\";\n\n// export default {\n//   // Gets all books\n//   getTeams: function() {\n//     return axios.get(\"/api/teams\");\n//   },\n//   // Gets the book with the given id\n//   getTeam: function(id) {\n//     return axios.get(\"/api/teams/\" + id);\n//   },\n//   // Deletes the book with the given id\n//   deleteBook: function(id) {\n//     return axios.delete(\"/api/books/\" + id);\n//   },\n//   // Saves a book to the database\n//   saveBook: function(bookData) {\n//     return axios.post(\"/api/books\", bookData);\n//   }\n// };","import React, { Component } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport TeamBar from \"./Components/TeamBar/TeamBar\";\nimport TeamItem from \"./Components/TeamBar/TeamItem.js\";\nimport StatsArea from \"./Components/StatsArea/StatsArea.js\";\nimport Graph from \"./Components/Graphs/Graph.js\";\nimport PlayerCard from \"./Components/Player/PlayerCard.js\";\nimport PlayerBar from \"./Components/Player/PlayerBar.js\";\nimport PlayerMap from \"./Components/PlayerMap\";\nimport Autocomplete from './Components/PlayerMap/autocomplete'\nimport ActivePlayer from './Components/PlayerMap/activePlayer'\nimport HoverPlayer from './Components/PlayerMap/hoverPlayer'\n\n// import PlayerStats from \"./Components/Player/PlayerStats.js\";\nimport TeamStatTable from \"./Components/TeamStatTable/TeamStatTable.js\";\n\nimport API from \"./Utils/API\";\nimport D3 from \"./Utils/D3\";\nimport GRAPHS from \"./Utils/GRAPHS\";\nimport AUTOCOMPLETE from \"./Utils/Autocomplete\";\nimport CONNECTIONS from \"./Utils/CONNECTIONS\";\n\nimport deburr from 'lodash/deburr';\nimport Autosuggest from 'react-autosuggest';\n// import Autosuggest from 'react-autosuggest';\n\n\n\nlet statTranslationArray = {\n\n    groupSet: \"Group Set\",\n    playerId: \"\",\n    playerName: \"Name\",\n    gp: \"Games Played\",\n    w: \"Wins\",\n    l: \"Losses\",\n    wPct: \"Win Percentage\",\n    min: \"Minutes\",\n    fgm: \"Field Goals Made\",\n    fga: \"Field Goals Attempted\",\n    fgPct: \"Field Goal Percentage\",\n    fG3M: \"3Pt Fields Goals Made\",\n    fG3A: \"3Pt Fields Goals Attempted\",\n    fg3Pct: \"3Pt Field Goal Percentage\",\n    ftm: \"Free Throws Made\",\n    fta: \"Free Throws Attempted\",\n    ftPct: \"Free Throw Percentage\",\n    oreb: \"Offensive Rebounds\",\n    dreb: \"Defensive Rebounds\",\n    reb: \"Rebounds\",\n    ast: \"Assists\",\n    tov: \"Turnovers\",\n    stl: \"Steals\",\n    blk: \"Blocks\",\n    blka: \"Shots Blocked\",\n    pf: \"Pensonal Fails\",\n    pfd: \"Personal Fails Drawn\",\n    pts: \"Points\",\n    plusMinus: \"Plus Minus\",\n    nbaFantasyPts: \"Fantasy Points\",\n    dD2: \"Double Doubles\",\n    tD3: \"Triple Doubles\",\n    searchValue: \"\"\n\n}\n\n\n\n\n\n\n\nclass App extends Component {\n\n\n\n    state = {\n        teams: [],\n        activeTeam: \"false\",\n        activePlayer: \"false\",\n        viewMode: \"team\",\n        switchSort: false,\n        teamsLoaded: \"not-active\",\n        playerLoaded: \"not-active\",\n        graphStyle: \"Pie\",\n        playerMap: {\n            children:[]\n        },\n        allPlayerMap: [],\n        suggestions: [],\n        allConnections: [],\n        searchValue: \"\",\n        playerMapConnections: [],\n        playerMapFocus: \"\",\n        depthNumber:1,\n        hoverPlayer:false,\n        updateMap: true\n    };\n    componentDidMount() {\n        // this.loadTeams();\n        this.initPlayerMap();\n        this.loadTeams();\n\n    };\n\n    handleNumberChange = (event) => {\n        this.setState({\n            depthNumber: event.target.value\n        })\n        this.showNthLevelConnections(this.state.playerMapFocus, event.target.value)\n    }\n    handleSuggestionsFetchRequested = ({ value }) => {\n        this.setState({\n            suggestions: this.getSuggestions(value),\n        });\n    };\n\n    handleSuggestionsClearRequested = () => {\n        this.setState({\n            suggestions: [],\n        });\n    };\n\n    handleChange = name => (event, { newValue }) => {\n        console.log(newValue)\n        this.setState({\n            searchValue: newValue,\n        });\n    };\n    handleSelectionSelected = (event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) => {\n\n        let player = {};\n\n        player.data = suggestion\n        this.showFirstLevelConnections(player)\n\n\n\n\n\n    }\n\n    getSuggestions = (value) => {\n        const inputValue = deburr(value.trim()).toLowerCase();\n        const inputLength = inputValue.length;\n        let count = 0;\n\n        return inputLength === 0 ? [] :\n            this.state.suggestionMasterList.filter(suggestion => {\n                let keep = \"\"\n                if(suggestion.name != undefined){\n                     keep = count < 5 && suggestion.name.slice(0, inputLength).toLowerCase() === inputValue ? suggestion : \"\";\n                }\n                if (keep != \"\") {\n                    count += 1;\n                }\n\n                return keep;\n            });\n    }\n\n\n    teamFilter = (tricode) => {\n                let allPlayerMap = JSON.parse(JSON.stringify({...this.state.allPlayerMap}));\n                let team = allPlayerMap.children.filter(x => x._id == tricode.toLowerCase());\n                let playerMap = {}\n                playerMap.children = team;\n                playerMap.name = \"PlayerMap\"\n                this.setState({ playerMap: playerMap})\n\n    }\n    initPlayerMap = () => {\n        // console.log(\"init player map\")\n        API.playerMap()\n            .then(data => {\n                var players = {}\n                players.name = \"PlayerMap\"\n                players.children = data.data.data\n                let suggestionMasterList = []\n\n                players.children.forEach(function(element, index) {\n                    element.index = index;\n                    element.type = \"team\"\n                    element.children.forEach(function(x, index) {\n                        x.type = \"player\"\n\n                        if (x.length == \"NA\") {\n                            x.r = 50\n                            x.value = 50;\n                        } else {\n                            x.r = x.length * 8;\n                            x.value = x.length * 8;\n                        }\n                      suggestionMasterList.push(x);\n                    })\n\n                });\n                this.setState({ playerMap: players,\n                    allPlayerMap: players,\n                    suggestionMasterList: suggestionMasterList,\n                    suggestions: suggestionMasterList,\n                    playerMapConnections: data.data.connections,\n                    allConnections: data.data.connections\n                 });\n            })\n    };\n    loadTeams = () => {\n        API.getTeams()\n            .then(res => this.setState({\n                teams: res.data,\n                teamsLoaded: \"active\"\n            }))\n            .catch(err => console.log(err));\n    };\n    sort = (property) => {\n        let currentState = { ...this.state };\n        if (this.state.tableSort == property) {\n            currentState.switchSort = !currentState.switchSort;\n        } else {\n            currentState.switchSort = false;\n        }\n        currentState.tableSort = property;\n        this.setState(currentState)\n        GRAPHS.statGraph(property, this.state.teams[this.state.activeTeam], this.state.graphStyle);\n\n    }\n    getTeam = (teamId, index) => {\n        // console.log(teamId);\n        // console.log(index);\n\n        let currentState = { ...this.state };\n        currentState.activeTeam = index;\n        currentState.activePlayer = \"false\";\n        currentState.viewMode = \"team\"\n        // currentState.playerLoaded = \"not-active\";\n        this.setState(currentState)\n        if (currentState.teams[currentState.activeTeam].players.length == 0) {\n            currentState.playerLoaded = \"not-active\";\n\n            API.getTeam(teamId)\n                .then(data => {\n                    let currentState = { ...this.state };\n                    currentState.playerLoaded = \"active\";\n                    currentState.teams[currentState.activeTeam].players = data.data\n                    this.setState(currentState)\n                    D3.initPlusMinus(this.state.teams[index]);\n                    GRAPHS.teamAssistToTurnover(this.state.teams[index])\n\n                    // this.getPlayerImages(index);\n                    // currentState.data.data\n                })\n        }\n\n\n        // currentState.activeTeam.teamIndex = index\n\n    };\n    resetPlayerMap = () => {\n        let allConnections = [...this.state.allConnections];\n\n        let allPlayers = {...this.state.allPlayerMap}\n        // console.log(allPlayers);\n      \n        this.setState({\n            playerMapConnections: allConnections,\n            playerMap: allPlayers,\n            playerMapFocus: \"\"\n            // playerMapFocus: \"\"\n        })\n\n    }\n    showFirstLevelConnections = (player) => {\n        let newState = CONNECTIONS.firstLevelConnections(player, this.state.allPlayerMap, this.state.allConnections)\n        this.setState(newState)\n        // this.setState({updateMap:true})\n    }\n\n    showNthLevelConnections = (player, levels) => {\n        let firstLevel = CONNECTIONS.firstLevelConnections(player, this.state.allPlayerMap, this.state.allConnections).playerMap;\n        let newState = CONNECTIONS.nthLevelConnections(levels, player, firstLevel, this.state.allPlayerMap,this.state.playerMapConnections, this.state.allConnections)\n        \n        this.setState(newState)\n        // this.setState({updateMap:true})\n\n    }\n    //   showThirdLevelConnections = (player) => {\n    //     let newState = CONNECTIONS.nthLevelConnections(3, player, this.state.playerMap, this.state.allPlayerMap,this.state.playerMapConnections, this.state.allConnections)\n        \n    //     this.setState(newState)\n    // }\n\n\n    getPlayer = (playerId, teamIndex, playerIndex) => {\n        let currentState = { ...this.state };\n        currentState.activePlayer = playerIndex;\n        currentState.viewMode = \"player\"\n        this.setState(currentState)\n        API.getPlayer(playerId)\n            .then(data => {\n                let currentState = { ...this.state };\n\n                currentState.teams[teamIndex].players[playerIndex].profile = data.data;\n                this.setState(currentState)\n            })\n    }\n    playerHover = (playerIndex) =>{\n        console.log(playerIndex)\n        let hoverPlayer = this.state.suggestionMasterList.filter(x => x._id == playerIndex)\n        this.setState({hoverPlayer: hoverPlayer[0]})\n    }\n    toggleGraphType = event => {\n        this.setState({ \"graphStyle\": event.target.value })\n        GRAPHS.statGraph(this.state.tableSort, this.state.teams[this.state.activeTeam], event.target.value);\n\n    }\n    createStatTable = (stats) => {\n        let statTable = []\n        console.log(stats);\n        for (var property in stats) {\n\n            if (stats.hasOwnProperty(property) && property != \"profile\" && property.indexOf(\"Rank\") < 0) {\n                let children = stats[property];\n                statTable.push(<div key = {property}>{property} : {stats[property]}</div>)\n            }\n        }\n        // console.log(statTable)\n        return statTable;\n\n    }\n    callUpdated = () =>{\n        this.setState({updateMap:false})\n    }\n\n    render() {\n        return (\n            <div className = \"main-container\">\n           \n            <ActivePlayer \n                nthLevel = {this.showNthLevelConnections}\n                handleNumberChange = {this.handleNumberChange}\n                depthNumber = {this.depthNumber}  \n                active = {this.state.playerMapFocus}></ActivePlayer>\n\n                <HoverPlayer hover = {this.state.hoverPlayer}></HoverPlayer>\n  \n \n\n            <PlayerMap  \n            reset = {this.resetPlayerMap} \n            activePlayer ={this.state.playerMapFocus}\n            hoverPlayer ={this.state.hoverPlayer} \n            playerMapPlayerView = {true} \n            firstLevelConnections ={this.showFirstLevelConnections} \n            connections = {this.state.playerMapConnections} \n            playerNodes = {this.state.playerMap} \n            playerHover = {this.playerHover}\n            updated = {this.state.updateMap}\n            callUpdated = {this.callUpdated}\n            className = \"player-connections\">\n\n            </PlayerMap>\n      <TeamBar active = {this.state.teamsLoaded}>\n      {this.state.teams.map((team, index) => (\n        <TeamItem key = {team.teamId}\n              id = {team.teamId}\n              logo = {team.logo}\n              index = {index}\n              active = {index == this.state.activeTeam ? \"active\" : \"\"}\n              teamFilter = {this.teamFilter}\n              tricode = {team.tricode}\n              getTeam = {this.getTeam}>\n        </TeamItem>\n        ))}\n      </TeamBar>\n   \n    <div className = \"row\">\n    {\n      // <StatsArea>\n   \n      //   { \n      //     this.state.activeTeam != \"false\" ? \n      //      <TeamStatTable \n      //      colors = {this.state.teams[this.state.activeTeam].colors}\n      //      tableSort = {this.state.tableSort ? this.state.tableSort : \"\" }\n      //      sort = {this.sort}\n      //   mode = {this.state.viewMode}\n      //   playerId = {this.state.viewMode == \"player\" ? this.state.teams[this.state.activeTeam].players[this.state.activePlayer].playerId : \"\"}\n      //   translationArray = {statTranslationArray}\n      //   switchSort = {this.state.switchSort}\n      //   team = { this.state.teams[this.state.activeTeam].players }></TeamStatTable>:\"\" }\n\n       \n      \n      // </StatsArea>\n  }\n        {this.state.tableSort ?\n        <div class = \"graph-view-container\">\n       \n        <Graph toggleGraphType = {this.toggleGraphType} graphName = {this.state.tableSort ? statTranslationArray[this.state.tableSort] : \"\"} className = \"stat-graph\"></Graph>\n\n\n        </div>\n        : \"\"}\n      </div>\n      </div>\n        )\n\n\n    }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}